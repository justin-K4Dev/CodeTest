// source: tutorial.hierarchy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ClientToLoginRes');
goog.provide('proto.ClientToLoginRes.LoginRes');
goog.provide('proto.ClientToLoginRes.LoginServerErrorCode');
goog.provide('proto.ClientToLoginRes.LogoutRes');
goog.provide('proto.ClientToLoginRes.MsgCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientToLoginRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ClientToLoginRes.oneofGroups_);
};
goog.inherits(proto.ClientToLoginRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ClientToLoginRes.displayName = 'proto.ClientToLoginRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientToLoginRes.LoginRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClientToLoginRes.LoginRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ClientToLoginRes.LoginRes.displayName = 'proto.ClientToLoginRes.LoginRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientToLoginRes.LogoutRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClientToLoginRes.LogoutRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ClientToLoginRes.LogoutRes.displayName = 'proto.ClientToLoginRes.LogoutRes';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ClientToLoginRes.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.ClientToLoginRes.MsgCase = {
  MSG_NOT_SET: 0,
  LOGINRES: 2,
  LOGOUTRES: 3
};

/**
 * @return {proto.ClientToLoginRes.MsgCase}
 */
proto.ClientToLoginRes.prototype.getMsgCase = function() {
  return /** @type {proto.ClientToLoginRes.MsgCase} */(jspb.Message.computeOneofCase(this, proto.ClientToLoginRes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientToLoginRes.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientToLoginRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientToLoginRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorcode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    loginres: (f = msg.getLoginres()) && proto.ClientToLoginRes.LoginRes.toObject(includeInstance, f),
    logoutres: (f = msg.getLogoutres()) && proto.ClientToLoginRes.LogoutRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientToLoginRes}
 */
proto.ClientToLoginRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientToLoginRes;
  return proto.ClientToLoginRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientToLoginRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientToLoginRes}
 */
proto.ClientToLoginRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ClientToLoginRes.LoginServerErrorCode} */ (reader.readEnum());
      msg.setErrorcode(value);
      break;
    case 2:
      var value = new proto.ClientToLoginRes.LoginRes;
      reader.readMessage(value,proto.ClientToLoginRes.LoginRes.deserializeBinaryFromReader);
      msg.setLoginres(value);
      break;
    case 3:
      var value = new proto.ClientToLoginRes.LogoutRes;
      reader.readMessage(value,proto.ClientToLoginRes.LogoutRes.deserializeBinaryFromReader);
      msg.setLogoutres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientToLoginRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientToLoginRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientToLoginRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorcode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLoginres();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ClientToLoginRes.LoginRes.serializeBinaryToWriter
    );
  }
  f = message.getLogoutres();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ClientToLoginRes.LogoutRes.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ClientToLoginRes.LoginServerErrorCode = {
  SUCCESS: 0,
  DUPLOGIN: 1,
  MOVING: 2,
  DBERROR: 3,
  KICKFAIL: 4,
  NOTCORRECTPASSWORD: 5,
  NOTFOUNDUSER: 6,
  NOGAMESERVER: 7,
  LOGINPENDING: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientToLoginRes.LoginRes.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientToLoginRes.LoginRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientToLoginRes.LoginRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.LoginRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameserveraddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameserverport: jspb.Message.getFieldWithDefault(msg, 2, 0),
    otp: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientToLoginRes.LoginRes}
 */
proto.ClientToLoginRes.LoginRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientToLoginRes.LoginRes;
  return proto.ClientToLoginRes.LoginRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientToLoginRes.LoginRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientToLoginRes.LoginRes}
 */
proto.ClientToLoginRes.LoginRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameserveraddr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameserverport(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientToLoginRes.LoginRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientToLoginRes.LoginRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientToLoginRes.LoginRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.LoginRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameserveraddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameserverport();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOtp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string gameServerAddr = 1;
 * @return {string}
 */
proto.ClientToLoginRes.LoginRes.prototype.getGameserveraddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ClientToLoginRes.LoginRes} returns this
 */
proto.ClientToLoginRes.LoginRes.prototype.setGameserveraddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 gameServerPort = 2;
 * @return {number}
 */
proto.ClientToLoginRes.LoginRes.prototype.getGameserverport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ClientToLoginRes.LoginRes} returns this
 */
proto.ClientToLoginRes.LoginRes.prototype.setGameserverport = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string otp = 3;
 * @return {string}
 */
proto.ClientToLoginRes.LoginRes.prototype.getOtp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ClientToLoginRes.LoginRes} returns this
 */
proto.ClientToLoginRes.LoginRes.prototype.setOtp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientToLoginRes.LogoutRes.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientToLoginRes.LogoutRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientToLoginRes.LogoutRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.LogoutRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientToLoginRes.LogoutRes}
 */
proto.ClientToLoginRes.LogoutRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientToLoginRes.LogoutRes;
  return proto.ClientToLoginRes.LogoutRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientToLoginRes.LogoutRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientToLoginRes.LogoutRes}
 */
proto.ClientToLoginRes.LogoutRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientToLoginRes.LogoutRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientToLoginRes.LogoutRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientToLoginRes.LogoutRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientToLoginRes.LogoutRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional LoginServerErrorCode errorCode = 1;
 * @return {!proto.ClientToLoginRes.LoginServerErrorCode}
 */
proto.ClientToLoginRes.prototype.getErrorcode = function() {
  return /** @type {!proto.ClientToLoginRes.LoginServerErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ClientToLoginRes.LoginServerErrorCode} value
 * @return {!proto.ClientToLoginRes} returns this
 */
proto.ClientToLoginRes.prototype.setErrorcode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional LoginRes loginRes = 2;
 * @return {?proto.ClientToLoginRes.LoginRes}
 */
proto.ClientToLoginRes.prototype.getLoginres = function() {
  return /** @type{?proto.ClientToLoginRes.LoginRes} */ (
    jspb.Message.getWrapperField(this, proto.ClientToLoginRes.LoginRes, 2));
};


/**
 * @param {?proto.ClientToLoginRes.LoginRes|undefined} value
 * @return {!proto.ClientToLoginRes} returns this
*/
proto.ClientToLoginRes.prototype.setLoginres = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ClientToLoginRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ClientToLoginRes} returns this
 */
proto.ClientToLoginRes.prototype.clearLoginres = function() {
  return this.setLoginres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ClientToLoginRes.prototype.hasLoginres = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LogoutRes logoutRes = 3;
 * @return {?proto.ClientToLoginRes.LogoutRes}
 */
proto.ClientToLoginRes.prototype.getLogoutres = function() {
  return /** @type{?proto.ClientToLoginRes.LogoutRes} */ (
    jspb.Message.getWrapperField(this, proto.ClientToLoginRes.LogoutRes, 3));
};


/**
 * @param {?proto.ClientToLoginRes.LogoutRes|undefined} value
 * @return {!proto.ClientToLoginRes} returns this
*/
proto.ClientToLoginRes.prototype.setLogoutres = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ClientToLoginRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ClientToLoginRes} returns this
 */
proto.ClientToLoginRes.prototype.clearLogoutres = function() {
  return this.setLogoutres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ClientToLoginRes.prototype.hasLogoutres = function() {
  return jspb.Message.getField(this, 3) != null;
};


