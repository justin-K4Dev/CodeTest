#-------------------------------------------------------------------------------
17. Arithmetic Operations
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
17.1. Bash Addition Calculator Example
#-------------------------------------------------------------------------------

$ which bash > bash_addition_calc.sh
$ vi bash_addition_calc.sh

#!/bin/bash
 
let RESULT1=$1+$2
echo $1+$2=$RESULT1 ' -> # let RESULT1=$1+$2'
declare -i RESULT2
RESULT2=$1+$2
echo $1+$2=$RESULT2 ' -> # declare -i RESULT2; RESULT2=$1+$2'
echo $1+$2=$(($1 + $2)) ' -> # $(($1 + $2))'

$ chmod +x bash_addition_calc.sh
$ ./bash_addition_calc.sh 88 12


#-------------------------------------------------------------------------------
17.2. Bash Arithmetics
#-------------------------------------------------------------------------------

$ which bash > arithmetic_operations.sh
$ vi arithmetic_operations.sh

#!/bin/bash
 
echo '### let ###'
# bash addition
let ADDITION=3+5
echo "3 + 5 =" $ADDITION

# bash subtraction
let SUBTRACTION=7-8
echo "7 - 8 =" $SUBTRACTION 

# bash multiplication
let MULTIPLICATION=5*8
echo "5 * 8 =" $MULTIPLICATION

# bash division
let DIVISION=4/2
echo "4 / 2 =" $DIVISION

# bash modulus
let MODULUS=9%4
echo "9 % 4 =" $MODULUS

# bash power of two
let POWEROFTWO=2**2
echo "2 ^ 2 =" $POWEROFTWO


echo '### Bash Arithmetic Expansion ###'
# There are two formats for arithmetic expansion: $[ expression ] 
# and $(( expression #)) its your choice which you use

echo 4 + 5 = $((4 + 5))
echo 7 - 7 = $[ 7 - 7 ]
echo 4 x 6 = $((3 * 2))
echo 6 / 3 = $((6 / 3))
echo 8 % 7 = $((8 % 7))
echo 2 ^ 8 = $[ 2 ** 8 ]


echo '### Declare ###'

echo -e "Please enter two numbers \c"
# read user input
read num1 num2
declare -i result
result=$num1+$num2
echo "Result is:$result "

# bash convert binary number 10001
result=2#10001
echo $result

# bash convert octal number 16
result=8#16
echo $result

# bash convert hex number 0xE6A
result=16#E6A
echo $result 

$ chmod +x arithmetic_operations.sh
$ ./arithmetic_operations.sh


#-------------------------------------------------------------------------------
17.3. Round floating point number
#-------------------------------------------------------------------------------

$ which bash > round.sh
$ vi round.sh

#!/bin/bash

# get floating point number
floating_point_number=3.3446
echo $floating_point_number

# round floating point number with bash
for bash_rounded_number in $(printf %.2f $floating_point_number); do
echo "Rounded number with bash:" $bash_rounded_number
done 

$ chmod +x round.sh
$ ./round.sh


#-------------------------------------------------------------------------------
17.4. Bash floating point calculations
#-------------------------------------------------------------------------------

$ which bash > simple_bash_calc.sh
$ vi simple_bash_calc.sh

#!/bin/bash

# Simple linux bash calculator 
echo "Enter input:" 
read userinput
echo "Result with 2 digits after decimal point:"
echo "scale=2; ${userinput}" | bc 
echo "Result with 10 digits after decimal point:"
echo "scale=10; ${userinput}" | bc 
echo "Result as rounded integer:"
echo $userinput | bc

$ chmod +x simple_bash_calc.sh
$ ./simple_bash_calc.sh