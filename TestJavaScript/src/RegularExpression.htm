<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
    </head>
    <body>
        <script>
			// regular expression
			var pattern = /a/;	
			var pattern = new RegExp('a');
			
			// RegExp.exec();
			console.log(pattern.exec('abcdef')); // ["a"]
			console.log(pattern.exec('bcdefg')); // null
			
			// RegExp.test();
			console.log(pattern.test('abcdef')); // true
			cnosole.log(pattern.test('bcdefg')); // false
			
			// String.match()
			console.log('abcdef'.match(pattern)); // ["a"]
			console.log('bcdefg'.match(pattern)); // null
			
			// String.replace()	
			console.log('abcdef'.replace(pattern, 'A'));  // Abcdef
			
			// i
			var xi = /a/;
			console.log("Abcde".match(xi)); // null
			var oi = /a/i; // i를 붙이면 대소문자를 구분하지 않느다.
			console.log("Abcde".match(oi)); // ["A"];
			
			// g
			var xg = /a/;
			console.log("abcdea".match(xg));
			var og = /a/g; // g를 붙이면 검색된 모든 결과를 리턴한다.
			console.log("abcdea".match(og));
			
			// 캡처 - 괄호안의 패턴은 마치 변수처럼 재사용할 수 있다.
			//        이 때 기호 $를 사용하는데 아래 코드는 coding과 everybody의 순서를 역전시킨다.
			var pattern = /(\w+)\s(\w+)/;
			var str = "coding everybody";
			var result = str.replace(pattern, "$2, $1");
			console.log(result); // everybody coding
			
			// 치환 - 본문 중의 URL을 링크 html 태그로 교체한다. 
			var urlPattern = /\b(?:https?):\/\/[a-z0-9-+&@#\/%?=~_|!:,.;]*/gim;
			var content = '생활코딩 : http://opentutorials.org/course/1 입니다. 네이버 : http://naver.com 입니다. ';
			var result = content.replace(urlPattern, function(url){
				return '<a href = "'+url+'">'+url+'</a>';
			});
			console.log(result);
			
        </script>
    </body>
</html>